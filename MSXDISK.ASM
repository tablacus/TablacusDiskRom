
;	Tablacus DISK ROM - DISK

;	ROM DISK DRIVER
;	1セクタ512

DISK_WRITE:
	OR	A
	JR	Z,DISK_WRITE1
	LD	A,(B_DRIVE)
	INC	A
	JR	NZ,DISK_WRITE2
	SCF
CALL_DISKIO:
	LD	IX,_DISKIO
CALL_MASTERS0:
	LD	A,0		;必ずドライブAになる
CALL_MASTERS:
	LD	IY,(MASTERS-1)	;メインROMスロット
	JP	_CALSLT
DISK_WRITE2:
	LD	A,1
DISK_WRITE1:
	LD	C,B
	CALL	GET_DISK_BANK
	PUSH	AF
	XOR	A				;書き込みルーチンはBANK1(6000h-7fffh)に配置されている
	LD	(BANK1_SEL),A			;ASCII-8K/Konami-8K
	LD	(KONAMI_SCC_BANK1_SEL),A	;Konami-8K/Konami-SCC
	POP	AF
	JP	DISK_WRITE_RAM			;似非RAMディスクに書き込むルーチン
DISKIO:
	JR	C,DISK_WRITE
	OR	A
	JR	Z,DISK_READ
	LD	A,(B_DRIVE)
	AND	A
	INC	A
	JR	Z,CALL_DISKIO
	LD	A,1
DISK_READ:
	LD	C,B
	CALL	GET_DISK_BANK

	PUSH	HL
DISKIO1:
	PUSH	BC		;B=残りのセクタ数
	PUSH	DE		;DE=セクタ番号
	PUSH	AF		;A=8KB単位でカートリッジ内のディスクが存在する位置を指定

	EX	DE,HL		;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
	PUSH	AF
	LD	A,(SECSZ_H)
	CALL	MUL_AHL
	POP	AF
	LD	C,L		;C=読み出し元
	ADD	HL,HL		;64KB→32KB
	ADD	HL,HL		;32KB→16KB
	ADD	HL,HL		;16KB→8KB	バンク切り替えのサイズに合わせる
	ADD	A,H
	LD	(BANK1_SEL),A			;ASCII-8K/Konami-8K
	LD	(KONAMI_SCC_BANK1_SEL),A	;Konami-8K/Konami-SCC
	LD	A,C		;C=読み出し元
	AND	01FH		;セグメントのサイズでフィルタする(8K:1F)
	ADD	A,high BANK1_ADR
	LD	H,A
	LD	BC,(SECSZ)	;BCは読み出すセクタサイズ
	LD	L,C		;C=0
	LDIR
	EX	DE,HL
	POP	AF
	POP	DE
	INC	DE
	POP	BC
	DJNZ	DISKIO1
	LD	B,C

	POP	HL
	XOR	A
	EI
	RET

DSKCHG:
	OR	A
	JR	Z,DSKCHG2
	LD	A,(B_DRIVE)
	INC	A
	JR	NZ,DSKCHG2
	LD	IX,_DSKCHG
	JP	CALL_MASTERS0
DSKCHG2:
	CALL	IS_BPB
	JR	C,NOTREADY
	XOR	A
	LD	B,1
	RET
NOTREADY:
	LD	A,2
	SCF
	RET

NO_BPB:
	POP	HL
	INC	HL
	LD	DE,DPB2DD
	LD	BC,DPB2DD_E-DPB2DD
	LDIR
	XOR	A
	RET

IS_BPB:
; in
; A=DRIVE 0:A 1:B
; out
; CF=0ディスクは存在する CF=1 ディスクは存在しない
	CALL	GET_DISK_BANK

	LD	A,(BANK1_ADR+21)	;BPB_Media
	CP	1
	RET	C

	LD	A,(BANK1_ADR+11)	;BPB_BytsPerSec
	ADD	A,0FFH
	RET	C

	LD	A,(BANK1_ADR+12)	;BPB_BytsPerSec
	CP	1
	RET	Z
	CP	2
	RET	Z
	CP	4
	RET	Z
	SCF
	RET

GETDPB:
	OR	A
	JR	Z,GETDPBC2
	LD	A,(B_DRIVE)
	INC	A
	JR	NZ,GETDPBC2
	LD	IX,_GETDPB
	JP	CALL_MASTERS0
GETDPBC2:
	PUSH	HL
	CALL	GET_DISK_BANK

	LD	A,(BANK1_ADR+21)	;BPB_Media	
	OR	A
	JR	Z,NO_BPB
	POP	IX
	LD	(IX+1),A		;MEDIA

	LD	A,(BANK1_ADR+11)	;BPB_BytsPerSec	
	LD	(IX+2),A		;SECSIZ LOW

	LD	A,(BANK1_ADR+12)	;BPB_BytsPerSec	
	LD	(IX+3),A		;SECSIZ HIGH

	ADD	A,A
	ADD	A,A
	ADD	A,A
	DEC	A
	LD	(IX+4),A		;DIRMSK

	LD	B,-1
	AND	A			;無限ループ阻止
GETDPB1:
	INC	B
	RRA
	JR	C,GETDPB1
	LD	(IX+5),B		;DIRSHFT

	LD	A,(BANK1_ADR+13)	;BPB_SecPerClus	
	DEC	A
	LD	(IX+6),A		;CLUSMSK

	AND	A			;無限ループ阻止
	LD	B,-1
GETDPB2:
	INC	B
	RRA
	JR	C,GETDPB2
	INC	B
	LD	(IX+7),B		;CLUSSHFT

	LD	HL,(BANK1_ADR+14)	;BPB_RsvdSecCnt	
	LD	(IX+8),L		;FIRFAT LOW
	LD	(IX+9),H		;FIRFAT HIGH

	LD	A,(BANK1_ADR+16)	;BPB_NumFATs	
	LD	(IX+10),A		;FATCNT

	LD	A,(BANK1_ADR+17)	;BPB_RootEntCnt	
	LD	(IX+11),A		;FATCNT

	LD	DE,(BANK1_ADR+22)	;BPB_FATSz16	
	LD	(IX+16),E		;FATSIZ

	LD	B,(IX+10)		;FATCNT
	LD	HL,0
GETDPB3:
	ADD	HL,DE
	DJNZ	GETDPB3
GETDPB4:
	LD	E,(IX+8)		;FIRFAT
	LD	D,(IX+9)		;FIRFAT
	ADD	HL,DE
	LD	(IX+17),L		;FIRDIR
	LD	(IX+18),H		;FIRDIR

	LD	A,(IX+3)		;SECSIZ HIGH
	ADD	A,A
	ADD	A,A
	LD	E,(IX+11)		;MAXENT
GETDPB5:
	SRL	E
	RRA
	JR	NC,GETDPB5
	LD	D,0
	ADD	HL,DE
	LD	(IX+12),L		;FIRREC
	LD	(IX+13),H		;FIRREC

	LD	HL,(BANK1_ADR+19)	;BPB_TotSec16	

	LD	E,(IX+12)		;FIRREC
	LD	D,(IX+13)		;FIRREC
	AND	A
	SBC	HL,DE

	LD	A,(IX+6)		;CLUSMSK
	INC	A
	SCF				;無限ループ阻止
GETDPB6:
	RRA
	JR	C,GETDPB7
	SRL	H
	RR	L
	JR	GETDPB6
GETDPB7:
	INC	HL
	LD	(IX+14),L		;MAXCLUS
	LD	(IX+15),H		;MAXCLUS

	;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
GETDPBD1:
	LD	A,(IX+3)		;SECSIZ HIGH
	AND	0FCH
	RET	Z

	SRL	(IX+3)			;SECSIZ HIGH

	SCF
	RL	(IX+6)			;CLUSMSK

	INC	(IX+7)			;CLUSSHFT

	SLA	(IX+8)			;FIRFAT LOW
	RL	(IX+9)			;FIRFAT HIGH

	SLA	(IX+14),L		;MAXCLUS
	RL	(IX+15),H		;MAXCLUS

	SLA	(IX+16)			;FATSIZ

	SLA	(IX+17)			;FIRDIR
	RL	(IX+18)			;FIRDIR

	LD	L,(IX+17)		;FIRDIR
	LD	H,(IX+18)		;FIRDIR

	LD	A,(IX+3)		;SECSIZ HIGH
	ADD	A,A
	ADD	A,A
	LD	E,(IX+11)		;MAXENT
GETDPBD5:
	SRL	E
	RRA
	JR	NC,GETDPBD5
	LD	D,0
	ADD	HL,DE
	LD	(IX+12),L		;FIRREC
	LD	(IX+13),H		;FIRREC

	JR	GETDPBD1

CHOICE:
	LD	IX,_CHOICE
	CALL	CALL_MASTERS
	LD	A,(MASTERS)
	CALL	_RDSLT
	CP	'A'
	JR	Z,CHOICE2
	LD	HL,STR_CHOICE1
	RET
CHOICE2:
	LD	HL,STR_CHOICE2
	RET

DSKFMT:
	PUSH	AF
	LD	A,(B_DRIVE)
	INC	A
	JR	NZ,DSKFMT2
	POP	AF
	LD	D,0
	LD	IX,_DSKFMT
	JP	CALL_MASTERS
DSKFMT2:
	POP	AF
	XOR	A
	SCF
BASENT:
	RET

DSKSTP:
	LD	IX,_DSKSTP
	JP	CALL_MASTERS

GETSLT:
	LD	A,(DRVTBL+1)
	RET

GET_DISK_BANK:
	OR	A		;A=DRIVE
	LD	A,DISK_BANK
	JR	Z,SET_DISK_BANK
	LD	A,(B_DRIVE)
SET_DISK_BANK:
	LD	(BANK1_SEL),A			;ASCII-8K/Konami-8K
	LD	(KONAMI_SCC_BANK1_SEL),A	;Konami-8K/Konami-SCC
	PUSH	HL
	LD	HL,(BANK1_ADR+11)	;BPB_BytsPerSec	
	BIT	3,H
	JR	NZ,SET_DISK_BANK1
	LD	H,2
SET_DISK_BANK1:
	LD	(SECSZ),HL
	POP	HL
	RET

;	HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)
MUL_AHL:
	RRA		;->CF
	RET	C
	ADD	HL,HL
	JR	MUL_AHL

DPB2DD:
	DB	0F9H	;MEDIA
	DW	00200H	;SECSIZ
	DB	00FH	;DIRMSK
	DB	004H	;DIRSHFT
	DB	001H	;CLUSMSK
	DB	002H	;CLUSSHFT
	DW	00001H	;FIRFAT
	DB	002H	;FATCNT
	DB	070H	;MAXENT
	DW	0000EH	;FIRREC
	DW	002CAH	;MAXCLUS
	DB	003H	;FATSIZ
	DW	0007H	;FIRDIR
DPB2DD_E:

STR_CHOICE1:
	DB	00DH,00AH,"1 - 1 side, double track"
	DB	00DH,00AH,"2 - 2 sides,double track"
	DB	00DH,00AH,00DH,00AH,0
STR_CHOICE2:
	DB	"Adding a new Disk."
	DB	00DH,00AH,"1) 720KB"
	DB	00DH,00AH,"2) 360KB"
	DB	00DH,00AH,0

;	似非RAMディスクに書き込むルーチン
;	バンク選択レジスタのアドレスと被らないようにBANK0(4000h-5fffh)に書き込む為に
;	書き込みルーチンはBANK1(6000h-7fffh)に配置する
;
	ORG	$+02000H
DISK_WRITE_RAM:
	OR	080H				;RAMディスクのアドレスを指定する為に80H以降にする
	LD	(BANK0_SEL),A			;ASCII-8K/Konami-8K

	PUSH	HL
DISKIO1W:
	PUSH	BC		;B=残りのセクタ数
	PUSH	DE		;DE=セクタ番号
	PUSH	AF		;A=8KB単位でカートリッジ内のディスクが存在する位置を指定

	EX	DE,HL		;DE=書き込み先のメモリアドレス HL=セクタ番号
	PUSH	AF
	LD	A,(SECSZ_H)
	CALL	MUL_AHL + 02000H	;
	POP	AF
	LD	C,L		;C=書き込み先
	ADD	HL,HL		;64KB→32KB
	ADD	HL,HL		;32KB→16KB
	ADD	HL,HL		;16KB→8KB	バンク切り替えのサイズに合わせる
	ADD	A,H
	OR	080H				;RAMディスクのアドレスを指定する為に80H以降にする
	LD	(BANK0_SEL),A			;ASCII-8K
	LD	A,C		;C=書き込み先
	AND	01FH		;セグメントのサイズでフィルタする(8K:1F)
	ADD	A,high BANK0_ADR
	LD	H,A
	LD	BC,(SECSZ)	;BCは書き込むセクタサイズ
	LD	L,C		;C=0
	EX	DE,HL
	LDIR
	POP	AF
	POP	DE
	INC	DE
	POP	BC
	DJNZ	DISKIO1W
	LD	B,C

	POP	HL
	XOR	A				;バンク0を元に戻す
	LD	(BANK0_SEL),A			;ASCII-8K
	EI
	RET

	ORG	$-02000H
