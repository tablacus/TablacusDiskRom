
;	Tablacus DISK ROM - INIT
;

INIT_ROM:
	LD	HL,AT_ISC
	LD	DE,ISC
	LD	BC,ISC_E-ISC
	LDIR

	LD	HL,AT_ISC_HOOK
	LD	DE,ISC_HOOK
	LD	BC,ISC_HOOK_E-ISC_HOOK
	LDIR

	LD	HL,AT_ISC_F8
	LD	DE,ISC_F8
	LD	BC,ISC_F8_E-ISC_F8
	LDIR

	LD	HL,ISC
	LD	(0F390H),HL

	CALL	GTSL1_
	LD	(ROM_SLT),A
				;ROMタイプ判別(ASCII-8K/ASCII-16K)
	LD	A,01FH
	LD	(ROM_MODE),A
	LD	A,BANK2_SEL/256
	LD	(ROM8000H_H),A

	LD	E,0
	LD	A,(ROM_SLT)
	LD	HL,BANK1_SEL
	CALL	_WRSLT

	LD	HL,06000H
	LD	A,(ROM_SLT)
	CALL	_RDSLT
	CP	'A'
	JR	Z,ROM8K
				;ASCII-8K/Konami-8Kではない(ASCII-16K)
	LD	A,03FH
	LD	(ROM_MODE),A
	JR	ROMCHECKED
ROM8K:				;Konami-8Kチェック
	LD	E,1
	LD	A,(ROM_SLT)
	LD	HL,BANK2_SEL
	CALL	_WRSLT

	LD	E,0
	LD	A,(ROM_SLT)
	LD	HL,KONAMI_BANK2_SEL
	CALL	_WRSLT

	LD	HL,08000H
	LD	A,(ROM_SLT)
	CALL	_RDSLT
	CP	'A'
	JR	NZ,ROMCHECKED
				;Konami-8K
	LD	A,KONAMI_BANK2_SEL/256
	LD	(ROM8000H_H),A
ROMCHECKED:
	XOR	A
	LD	E,A
	LD	D,A
	CALL	MAPPING

	LD	HL,08000H+20		;BPB_TotSec16	
	LD	A,(ROM_SLT)
	CALL	_RDSLT
	PUSH	AF
	LD	HL,08000H+19		;BPB_TotSec16	
	LD	A,(ROM_SLT)
	CALL	_RDSLT
	POP	HL
					;HA=TotSec16
	LD	B,5
B_DRIVE1:
	SRL	H
	RRA
	DJNZ	B_DRIVE1

	INC	A
	LD	(B_DRIVE),A
	RET

GTSL1_:
	PUSH	HL		;Save registers
	PUSH	DE
;
	CALL	RSLREG		;read primary slot #
	RRCA
	RRCA
	AND	11B		;[A]=000000PP
	LD	E,A
	LD	D,0		;[DE]=000000PP
	LD	HL,EXPTBL
	ADD	HL,DE		;[HL]=EXPTBL+000000PP
	LD	E,A		;[E]=000000PP
	LD	A,(HL)		;[A]=(EXPTBL+000000PP)
	AND	80H		;Use only MSB
	JR	Z,GTSL1NOEXP
	OR	E		;[A]=F00000PP
	LD	E,A		;save primary slot number
	INC	HL		;point to SLTTBL entry
	INC	HL
	INC	HL
	INC	HL
	LD	A,(HL)		;get currently expansion slot register
	RRCA
	RRCA
	AND	11B		;[A] = 000000SS
	RLCA
	RLCA			;[A] = 0000SS00
	OR	E		;[A] = F000SSPP
;
GTSL1END:
	POP	DE
	POP	HL
	RET
GTSL1NOEXP:
	LD	A,E		;[A] = 000000PP
	JR	GTSL1END

AT_ISC:
	ORG	ISC,AT_ISC-RUN
	PUSH	AF
	LD	A,IXH
	CP	040H
	JR	NZ,ISC_DEF
	LD	A,(0FFFFH)
	AND	00CH
	CP	4
	JR	NZ,ISC_DEF
	EX	AF,AF'
	BIT	2,A
	JR	Z,ISC_DEF2
	BIT	3,A
	JP	NZ,CHECK_IXL
ISC_DEF2:
	EX	AF,AF'
ISC_DEF:
	POP	AF
	JP	(IX)

ISC_E:
	ORG	$$+RUN			;$DEPHASE

AT_ISC_F8:
	ORG	ISC_F8,AT_ISC_F8-RUN
	NOP
CHECK_IXL:
	EX	AF,AF'
	LD	A,IXL
	CP	020H
	JP	NC,ISC_DEF
	JP	HOOK_DISKROM

ISC_F8_E:
	ORG	$$+RUN			;$DEPHASE

AT_ISC_HOOK:
	ORG	ISC_HOOK,AT_ISC_HOOK-RUN
;	NOP
HOOK_DISKROM:
	POP	AF
	LD	IYH,0
ROM_SLT	EQU	$-1
	JP	_CALSLT

ROM_MODE:
	DB	0
ROM8000H_H:
	DB	0
B_DRIVE:
	DB	0
ISC_HOOK_E:
	ORG	$$+RUN			;$DEPHASE
