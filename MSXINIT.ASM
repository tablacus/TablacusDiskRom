
;	Tablacus DISK ROM - INIT
;

INIT_ROM:
	LD	A,(CLPRIM+4)	;一時的にインタースロットコールをフックしてる？
	CP	low ISC
	RET	Z

	LD	HL,AT_ISC
	LD	DE,ISC
	LD	BC,ISC_E-ISC
	LDIR

	CALL	GTSL1_
	LD	(ROM_SLT),A
	LD	A,high BANK2_SEL
	LD	(ROM_SEL),A
	LD	A,01FH
	LD	(ROM_MODE),A

	LD	E,0
	LD	A,(ROM_SLT)
	LD	HL,BANK1_SEL
	CALL	_WRSLT

	LD	HL,06000H
	LD	A,(ROM_SLT)
	CALL	_RDSLT
	CP	'A'
	JR	Z,ROM8K
				;ASCII-8K/Konami-8Kではない(ASCII-16K)
	LD	A,03FH
	LD	(ROM_MODE),A
	JR	ROMCHECKED
ROM8K:				;Konami-8Kチェック
	LD	E,1
	LD	A,(ROM_SLT)
	LD	HL,BANK2_SEL
	CALL	_WRSLT

	LD	E,0
	LD	A,(ROM_SLT)
	LD	HL,KONAMI_BANK2_SEL
	CALL	_WRSLT

	LD	HL,08000H
	LD	A,(ROM_SLT)
	CALL	_RDSLT
	CP	'A'
	JR	NZ,ROMCHECKED
				;Konami-8K
	LD	A,high KONAMI_BANK2_SEL
	LD	(ROM_SEL),A
ROMCHECKED:
	XOR	A
	LD	L,A
	LD	H,A
	CALL	MAPPING1
	LD	A,(ROM_SLT)
	CALL	_WRSLT

	LD	HL,08000H+20		;BPB_TotSec16	
	LD	A,(ROM_SLT)
	CALL	_RDSLT
	PUSH	AF
	LD	HL,08000H+19		;BPB_TotSec16	
	LD	A,(ROM_SLT)
	CALL	_RDSLT
	POP	HL
					;HA=TotSec16
	LD	L,A			;切り上げ
	LD	BC,0001FH
	ADD	HL,BC
	LD	A,L

	LD	B,5
B_DRIVE1:
	SRL	H
	RRA
	DJNZ	B_DRIVE1

	INC	A			;A=(TotSec16/32)+1
	LD	(B_DRIVE),A

#if exists FIX_ROM_MODE
	LD	A,(ROM_MODE)
	CP	FIX_ROM_MODE
	JR	Z,OK_FIX_ROM_MODE
	LD	HL,MSG_ERROR_ROM_MODE
	CALL	MSX
	LD	A,(ROM_MODE)
	CALL	PRTHX
	LD	IY,(EXPTBL) ;メインROMスロット
	LD	IX,CHGET
	CALL	_CALSLT
	LD	HL,MSG_CRLF
	CALL	MSX
OK_FIX_ROM_MODE:
#endif

#if exists FIX_ROM_SEL
	LD	A,(ROM_SEL)
	CP	FIX_ROM_SEL
	JR	Z,OK_FIX_ROM_SEL
	LD	HL,MSG_ERROR_ROM_SEL
	CALL	MSX
	LD	A,(ROM_SEL)
	CALL	PRTHX
	LD	IY,(EXPTBL) ;メインROMスロット
	LD	IX,CHGET
	CALL	_CALSLT
	LD	HL,MSG_CRLF
	CALL	MSX
OK_FIX_ROM_SEL:
#endif

#if exists FIX_DRIVE
	LD	A,(B_DRIVE)
	CP	FIX_DRIVE
	JR	Z,OK_FIX_DRIVE
	LD	HL,MSG_ERROR_DRIVE
	CALL	MSX
	LD	A,(B_DRIVE)
	CALL	PRTHX
	LD	IY,(EXPTBL) ;メインROMスロット
	LD	IX,CHGET
	CALL	_CALSLT
	LD	HL,MSG_CRLF
	CALL	MSX
OK_FIX_DRIVE:
#endif

	LD	HL,ISC
	LD	(CLPRIM+4),HL	;一時的にインタースロットコールをフックする
	LD	IX,INIT1
	JP	ISC
INIT1:
	RET

GTSL1_:				;自分のいるスロットを知る
	CALL	RSLREG		;read primary slot #
	RRCA
	RRCA
	AND	3		;[A]=000000PP
	LD	E,A		;[E]=000000PP
	LD	HL,EXPTBL
	ADD	A,L		;桁上りは無い
	LD	L,A		;[HL]=EXPTBL+000000PP
	LD	A,E		;[A]=000000PP
	BIT	7,(HL)
	RET	Z
	LD	A,L		;point to SLTTBL entry
	ADD	A,4		;桁上りは無い
	LD	L,A
	LD	A,(HL)		;get currently expansion slot register
	AND	00CH		;[A] = 0000SS00
	OR	E		;[A] = 0000SSPP
	OR	080H		;[A] = 1000SSPP
	RET

AT_ISC:
	ORG	ISC,AT_ISC-RUN
	PUSH	AF
	PUSH	HL
	LD	HL,DRVTBL+1
	LD	A,(HL)
	OR	A		;DRVTBLのスロットが使われるまで待つ
	JR	Z,ISC_DEF
	LD	A,(ROM_SLT)	;DRVTBLのスロットをTablacus DISK ROMに置き換える
	LD	(HL),A
	LD	HL,CLPRIM+12	;インタースロットコールのフックを元に戻す
	LD	(CLPRIM+4),HL
ISC_DEF:
	POP	HL
	POP	AF
	JP	(IX)

	DS	2
ROM_SLT:
	DB	0
ROM_MODE:
	DB	0
ROM_SEL:
	DB	0
B_DRIVE:
	DB	0
ISC_E:
	ORG	$$+RUN			;$DEPHASE

MSX1:
	CALL	MSGA1
MSX:
	LD	A,(HL)
	INC	HL
	OR	A
	JR	NZ,MSX1
	RET

PRTHX:
	PUSH	AF
	RLCA
	RLCA
	RLCA
	RLCA
	CALL	PRTA2
	POP	AF
PRTA2:
	CALL	ASC
MSGA1:
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	IY,(EXPTBL) ;メインROMスロット
	LD	IX,CHPUT
	CALL	_CALSLT
	POP	HL
	POP	DE
	POP	BC
MSGA2:
	POP	AF
	RET
ASC:
	AND	$0F
	OR	$30
	CP	$3A
	RET	C
	ADD	A,7
	RET
	
MSG_ERROR_ROM_MODE:
	DB	"Illegal ROM_MODE:",0
MSG_ERROR_ROM_SEL:
	DB	"Illegal ROM_SEL:",0
MSG_ERROR_DRIVE:
	DB	"Illegal DRIVE:",0
MSG_CRLF:
	DB	13,10,0
